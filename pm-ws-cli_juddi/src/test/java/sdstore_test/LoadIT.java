package sdstore_test;



import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.util.Arrays;

import javax.xml.registry.JAXRException;

import org.junit.*;

import example.cli.*;
// classes generated by wsimport from WSDL
import pt.ulisboa.tecnico.sdis.store.ws.*;


/**
 * Integration Test suite
 */
public class LoadIT {

	private static SecurityLayer STORE_CLIENT;
    // tests
    // assertEquals(expected, actual);

    // public void createDoc(CreateDoc parameters) throws
    // DocAlreadyExists_Exception

    @BeforeClass
    public static void oneTimeSetUp() throws JAXRException {
        FrontEnd service = new FrontEnd("http://localhost:8081", "SD-STORE", 3, 2, 2, 1000);
        STORE_CLIENT = new SecurityLayer (service);
    }

    @AfterClass
    public static void oneTimeTearDown() {
    	STORE_CLIENT = null;
    }
    
    @Test
    public void testLoad() throws Exception {
        final DocUserPair docUser = new DocUserPair();
        docUser.setDocumentId("d1");
        docUser.setUserId("duarte");

        // create document
        STORE_CLIENT.createDoc(docUser);
        // store document
        STORE_CLIENT.store(docUser, "d1contents".getBytes());

        // load document
        byte[] contents = STORE_CLIENT.load(docUser);

        assertNotNull(contents);
        assertTrue(Arrays.equals("d1contents".getBytes(), contents));
    }

    @Test(expected = DocDoesNotExist_Exception.class)
    public void testDocDoesNotExist() throws Exception {
        final DocUserPair docUser = new DocUserPair();
        docUser.setDocumentId("d2");
        docUser.setUserId("duarte");

        // load document
        STORE_CLIENT.load(docUser);
    }

    @Test(expected = DocDoesNotExist_Exception.class)
    public void testLoadNullDoc() throws Exception {
        final DocUserPair docUser = new DocUserPair();
        docUser.setDocumentId(null);
        docUser.setUserId("duarte");

        // load document
        STORE_CLIENT.load(docUser);
    }

    @Test(expected = DocDoesNotExist_Exception.class)
    public void testLoadEmptyDoc() throws Exception {
        final DocUserPair docUser = new DocUserPair();
        docUser.setDocumentId("");
        docUser.setUserId("duarte");

        // load document
        STORE_CLIENT.load(docUser);
    }

    @Test(expected = UserDoesNotExist_Exception.class)
    public void testUserDoesNotExist() throws Exception {
        final DocUserPair docUser = new DocUserPair();
        docUser.setDocumentId("d3");
        docUser.setUserId("userthatdoesnotexist");

        // load document
        STORE_CLIENT.load(docUser);
    }

    @Test(expected = UserDoesNotExist_Exception.class)
    public void testLoadNullUser() throws Exception {
        final DocUserPair docUser = new DocUserPair();
        docUser.setDocumentId("d3");
        docUser.setUserId(null);

        // load document
        STORE_CLIENT.load(docUser);
    }

    @Test(expected = UserDoesNotExist_Exception.class)
    public void testLoadEmptyUser() throws Exception {
        final DocUserPair docUser = new DocUserPair();
        docUser.setDocumentId("d3");
        docUser.setUserId("");

        // load document
        STORE_CLIENT.load(docUser);
    }

}
